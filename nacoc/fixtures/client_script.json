[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "PCU Assessment",
  "enabled": 1,
  "modified": "2023-03-12 17:51:28.888038",
  "module": "NACOC",
  "name": "Filter Precursor Case Officer",
  "script": "frappe.ui.form.on('PCU Assessment', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"officer\", \"officer\", function(doc, cdt, cdn) {\n\t\t\t// let d = locals[cdt][cdn];\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"role_profile_name\": [\"in\", [\"Precursor Officer\", \"Precursor Manager\"]]\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "PCU Assessment",
  "enabled": 1,
  "modified": "2023-03-12 17:50:29.320711",
  "module": "NACOC",
  "name": "Filter Assigned Precursor Officer",
  "script": "frappe.ui.form.on('PCU Assessment', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"assigned_officer\", \"assigned_officer\", function(doc, cdt, cdn) {\n\t\t\t// let d = locals[cdt][cdn];\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"role_profile_name\": [\"in\", [\"Precursor Officer\", \"Precursor Manager\"]]\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "MMU Vessel",
  "enabled": 1,
  "modified": "2023-08-15 10:42:04.700066",
  "module": "NACOC",
  "name": "Hide Name Column",
  "script": "frappe.listview_settings['MMU Vessel'] = {\r\n    hide_name_column: true,\r\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "MMU Vessels at Anchorage",
  "enabled": 1,
  "modified": "2023-08-15 13:46:59.929182",
  "module": "NACOC",
  "name": "Customize Map in Anchorage Doctype",
  "script": "frappe.ui.form.on('MMU Vessels at Anchorage', {\n\trefresh(frm) {\n\t\t// Make sure we have a dictionary to add our custom settings\n    // const map_settings = frappe.provide(\"frappe.utils.map_defaults\");\n    // const lat = frm.doc.latitude;\n    // const long = frm.doc.longitude\n    // // Center and zoomlevel can be copied from the URL of\n    // // the map view at openstreetmap.org.\n    \n    // // New default location (Tema Anchorage).\n    // map_settings.center = [5.572761, 0.02660752];\n    // // new zoomlevel: see the whole country, not just a single city\n    // map_settings.zoom = 6;\n    \n    // // Use a different map: satellite instead of streets\n    // // Examples can be found at https://leaflet-extras.github.io/leaflet-providers/preview/\n    // map_settings.tiles =\n    // \t\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\";\n    // map_settings.attribution =\n    // \t\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\";\n\t    \n\t   // let geo = { \"type\": \"Point\", \"coordinates\": [30.0, 10.0] }\n\t   // let map = frm.get_field('location').map\n    //     map.setZoom(1);\n\n    //     window.L.geoJSON(geo).addTo(map)\n    // frm.fields_dict.location.map.setView([frm.doc.latitude, frm.doc.longitude], 13);\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "MMU Vessels at Anchorage",
  "enabled": 1,
  "modified": "2023-08-18 09:03:32.361991",
  "module": "NACOC",
  "name": "Calculate Duration of Last AIS Gap",
  "script": "frappe.ui.form.on('MMU Vessels at Anchorage', {\n\trefresh: function(frm) {\n         // Merge date_ais_turned_off and time_ais_turned_off into a datetime field\n        let turned_off = new Date(frm.doc.date_ais_turned_off + ' ' + frm.doc.time_ais_turned_off);\n\n        // Merge date_ais_turned_on and time_ais_turned_on into a datetime field\n        let turned_on = new Date(frm.doc.date_ais_turned_on + ' ' + frm.doc.time_ais_turned_on);\n\n        // Calculate duration when form is loaded\n        if (frm.doc.date_ais_turned_off && frm.doc.time_ais_turned_off && frm.doc.date_ais_turned_on && frm.doc.time_ais_turned_on) {\n            let duration = \"\";\n            let diffMs = Math.abs(turned_on - turned_off);\n            \n            let diffDays = Math.floor(diffMs / 86400000); // days\n            let diffHrs = Math.floor((diffMs % 86400000) / 3600000); // hours\n            let diffMins = Math.round(((diffMs % 86400000) % 3600000) / 60000); // minutes\n            \n            let diffDaysText = diffDays > 1 ? \" days, \" : \" day, \"\n            let diffHrsText = diffHrs > 1 ? \" hours, \" : \" hour, \"\n            let diffMinsText = diffDays > 1 ? \" minutes\" : \" minutes\"\n            \n            duration = \"AIS was down for \" + diffDays + diffDaysText + diffHrs + diffHrsText + \"and \" + diffMins + diffMinsText;\n            frm.set_value('duration_of_last_ais_gap', duration);\n        }\n    },\n\n    date_ais_turned_off: function(frm) {\n        frm.trigger('refresh');\n    },\n\n    time_ais_turned_off: function(frm) {\n        frm.trigger('refresh');\n    },\n\n    date_ais_turned_on: function(frm) {\n        frm.trigger('refresh');\n    },\n\n    time_ais_turned_on: function(frm) {\n        frm.trigger('refresh');\n    }\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Import Tagging",
  "enabled": 1,
  "modified": "2023-11-08 11:20:16.681840",
  "module": "NACOC",
  "name": "Filter Aviance Officers",
  "script": "frappe.ui.form.on('Import Tagging', {\n\tsetup: function(frm) {\n\t\tfrm.set_query(\"tagging_officer\", function(doc) {\n\t\t\t// let d = locals[cdt][cdn];\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"role_profile_name\": [\"in\", [\"Aviance Officer\", \"Aviance Manager\"]]\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\tfrm.set_query(\"releasing_officer\", function(doc) {\n\t\t\t// let d = locals[cdt][cdn];\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\t\"role_profile_name\": [\"in\", [\"Aviance Officer\", \"Aviance Manager\"]]\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t},\n})",
  "view": "Form"
 }
]